"""
Created on Sat Dec  1 18:17:36 2018

@author: risabh
"""
import time
config(channel is fifo, clock is lamport)

class HeartBeat(process):
    
    def setup(master:Master):
        output('Setting up HeartBeat')
        self.heartBeatFromChunks = set()
        self.availableChunkServers = set()
        self.filesList = {}
        self.master = master

        
    def sendHeartBeat():
        output('Inside Send Heart Beat')
        self.heartBeatFromChunks = set()
        nonAvailableChunkServers =set()
        if len(self.availableChunkServers)==0:
            send(('GET_AVAILABLE_CHUNK_SERVERS',), to = master)
            await(len(self.availableChunkServers)!=0)        
        for chunkServer in self.availableChunkServers:
            send(('HEARTBEAT',), to = chunkServer)
        if await(len(self.availableChunkServers) == len(self.heartBeatFromChunks)):
            output('All chunk servers are responding')
        elif timeout(20):
            output('Chunk Servers available', self.heartBeatFromChunks)
            nonAvailableChunkServers = self.availableChunkServers - self.heartBeatFromChunks
            output("Chunk servers not available", nonAvailableChunkServers)
        send(('UPDATE_AVAILABLE_CHUNK_SERVERS', nonAvailableChunkServers), to = master)
        send(('DELETE_ORPHANED_CHUNKS', self.filesList), to=master)
     
    def receive(msg=('AVAILABLE_CHUNK_SERVERS', availableChunkServers), from_=master):
        self.availableChunkServers = availableChunkServers
        
    def receive(msg=('HEARTBEAT_ACKNOWLEDGED',files), from_=chunkServer):
        output("Heart beat received from", chunkServer)
        self.heartBeatFromChunks.add(chunkServer)
        localFileList = []
        for file in files:
            localFileList.append(file[:-4]) 
        self.filesList[chunkServer] = localFileList 

    def run():
        while True:
            sendHeartBeat()
            time.sleep(10)            