import sys
import time
import os
config(channel is fifo, clock is lamport)

class GFSChunkserver(process):

    def setup(chunkloc:int):
        output('Setting up chunk', chunkloc)
        self.chunkloc = chunkloc
        self.chunktable = {}
        self.localFilesystemRoot = "/tmp/gfs/chunks/" + repr(chunkloc)
        if not os.access(self.localFilesystemRoot, os.W_OK):
            os.makedirs(self.localFilesystemRoot)

    def receive(msg= ('WRITE_CHUNK',chunkuuid,chunk),from_ = sender):
        success = write(chunkuuid,chunk)
        send(('WRITE_CHUNK_DONE',success),to= sender)

    def receive(msg= ('READ_CHUNK',chunkuuid),from_ = sender):
        chunk = read(chunkuuid)
        send(('READ_CHUNK_DONE',chunk),to= sender)

    def receive(msg= ('GET_FILE_NAME',chunkuuid),from_ = sender):
        filename = chunkFileName(chunkuuid)
        send(('CHUNK_FILE_NAME',filename),to= sender)

    def write(chunkuuid, chunk):
        output('Writing chunk', chunk, chunkuuid)
        try:
            localFilename = self.chunkFileName(chunkuuid)
            output('filename', localFilename)
            with open(localFilename, "w") as f:
                f.write(chunk)
            self.chunktable[chunkuuid] = localFilename
            return True
        except:
            return False

    def read(chunkuuid):
        data = None
        localFilename = self.chunkFileName(chunkuuid)
        with open(localFilename, "r") as f:
            data = f.read()
        return data

    def chunkFileName(chunkuuid):
        localFilename = self.localFilesystemRoot + "/" \
            + str(chunkuuid) + '.gfs'
        return localFilename

    def run():
         await(received(('DONE',)))
