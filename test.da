import sys, time
from master import Master
from client import GFSClient
from ProcessMonitor import ProcessMonitor
config(channel is fifo, clock is lamport)

def main():
    processMon = new(ProcessMonitor)
    setup(processMon, ())
    start(processMon)
    output('PMON started')
    master1 = new(Master)
    setup(master1, ())
    start(master1)
    client1 = new(GFSClient)
    setup(client1, (master1,processMon))
    start(client1)
    client2 = new(GFSClient)
    setup(client2, (master1,processMon))
    start(client2)
    client3 = new(GFSClient)
    setup(client3, (master1,processMon))
    start(client3)
    client4 = new(GFSClient)
    setup(client4, (master1,processMon))
    start(client4)
    client5 = new(GFSClient)
    setup(client5, (master1,processMon))
    start(client5)
    s1 = 'Hi testing 12'
    s2 = 'Hi testing 456'
    fileNameOne = 'file1.txt'
    fileNameTwo = 'file2.txt'
    fileNameThree = 'file3.txt'
    fileNameFour = 'file4.txt'
    fileNameFive = 'file5.txt'
    testCase = 16

    if(testCase == 0):
        #Testing Create
        send(('CREATE_MSG', 1, fileNameOne), to=client1)
        await(some(received(('CREATED', fileName2)), has=fileNameOne == fileName2))
        send(('CREATE_MSG', 1, fileNameOne), to=client1)
        await(some(received(('ERROR_CREATE', message))))
        assert(message == 'File error, file exists already')

    if(testCase == 1):
        #Testing Write
        send(('CREATE_MSG', 1, fileNameOne), to=client1)
        await(some(received(('CREATED', fileName2)), has=fileNameOne == fileName2))
        send(('WRITE_MSG',1,fileNameOne, s1), to=client3)
        await(some(received(('WRITTEN', fileName2)),has=fileNameOne == fileName2))
        send(('WRITE_MSG',1,fileNameTwo, s1), to=client2)
        await(some(received(('ERROR_WRITE', message))))
        assert(message == 'File error, file doesnt exists')

    if(testCase == 2):
        #Testing Delete
        send(('CREATE_MSG', 1, fileNameOne), to=client1)
        await(some(received(('CREATED', fileName2)), has=fileNameOne == fileName2))
        send(('DELETE', 1, fileNameTwo), to = client1)
        await(some(received(('ERROR_DELETE', message))))
        assert(message == 'File Doesnt Exist to Delete')

    if(testCase == 3):
        #Testing READ
        send(('CREATE_MSG', 1, fileNameOne), to=client1)
        await(some(received(('CREATED', fileName2)), has=fileNameOne == fileName2))
        send(('READ_MSG', 1, fileNameTwo), to=client4) 
        await(some(received(('ERROR_READ', message))))
        assert(message == 'File Doesnt Exist to read')
    
    if(testCase == 4):
        #Testing Record Append
        send(('CREATE_MSG', 1, fileNameOne), to=client1)
        await(some(received(('CREATED', fileName2)), has=fileNameOne == fileName2))
        send(('WRITE_APPEND_MSG', 1, fileNameTwo, s2), to=client3)
        await(some(received(('ERROR_APPEND', message))))
        assert(message == 'File Doesnt Exist to do record append')
         
    if(testCase == 5):
        #Testing Snapshot
        send(('CREATE_MSG', 1, fileNameOne), to=client1)
        await(some(received(('CREATED', fileName2)), has=fileNameOne == fileName2))
        send(('CREATE_SNAPSHOT', 1, fileNameTwo), to = client1)
        await(some(received(('ERROR_SNAPSHOT', message))))
        assert(message == 'File Doesnt Exist to create Snapshot')

    if(testCase == 6):
        #Testing Create
        send(('CREATE_MSG', 1, fileNameOne), to=client1)
        await(some(received(('CREATED', fileName2)), has=fileNameOne == fileName2))
        output('**********File created successfully********',fileNameOne)

    if(testCase == 7):
        #Testing Write
        send(('CREATE_MSG', 1, fileNameOne), to=client1)
        await(some(received(('CREATED', fileName2)), has=fileNameOne == fileName2))
        send(('WRITE_MSG',1,fileNameOne, s1), to=client3)
        await(some(received(('WRITTEN', fileName2)),has=fileNameOne == fileName2))
        output('**********File written successfully********',fileNameOne)

    if(testCase == 8):
        #Testing Delete
        send(('CREATE_MSG', 1, fileNameOne), to=client1)
        await(some(received(('CREATED', fileName2)), has=fileNameOne == fileName2))
        send(('DELETE', 1, fileNameOne), to = client1)
        await(some(received(('DELETE_DONE', fileName2)),has=fileNameOne == fileName2))
        output('**********File deleted successfully********',fileNameOne)
 
    if(testCase == 9):
        #Testing READ
        send(('CREATE_MSG', 1, fileNameOne), to=client1)
        await(some(received(('CREATED', fileName2)), has=fileNameOne == fileName2))
        send(('WRITE_MSG',1,fileNameOne, s1), to=client3)
        await(some(received(('WRITTEN', fileName2)),has=fileNameOne == fileName2))
        send(('READ_MSG', 1, fileNameOne), to=client4) 
        await(some(received(('READ_FILE_DONE',dataRead,fileName2)), 
                                        has=fileNameOne == fileName2))
        output('**********File read successfully********',fileNameOne)
        output('*************Data Read is ***********',dataRead)

    if(testCase == 10):
        #Testing Record Append
        send(('CREATE_MSG', 1, fileNameOne), to=client1)
        await(some(received(('CREATED', fileName2)), has=fileNameOne == fileName2))
        send(('WRITE_APPEND_MSG', 1,fileNameOne, s2), to=client1)
        await(some(received(('RECORD_APPEND_DONE',))))
        output('**********Record appended successfully********',fileNameOne)
        send(('READ_MSG', 1, fileNameOne), to=client4) 
        await(some(received(('READ_FILE_DONE',dataRead,fileName2)), 
                                        has=fileNameOne == fileName2))
        output('*************Data written to File is***********',dataRead)


    if(testCase == 11):
        #Testing Snapshot
        send(('CREATE_MSG', 1, fileNameOne), to=client1)
        await(some(received(('CREATED', fileName2)), has=fileNameOne == fileName2))
        send(('WRITE_APPEND_MSG', 1, fileNameOne, s2), to=client4)
        time.sleep(2)
        send(('CREATE_SNAPSHOT', 1, fileNameOne), to = client1)
        time.sleep(2)
        output('**************Snapshot Created successfully*******************') 
        
    if(testCase == 12):  
        send(('CREATE_MSG', 1, fileNameOne), to=client1)
        await(some(received(('CREATED', fileName2)), has=fileNameOne == fileName2))
        send(('CREATE_MSG', 1, fileNameTwo), to=client2)
        await(some(received(('CREATED', fileName2)), has=fileNameTwo == fileName2))
        send(('WRITE_MSG',1,fileNameOne, s1), to=client3)
        await(some(received(('WRITTEN', fileName2)),has=fileNameOne == fileName2))
        s2 = 'Append1232'
        send(('WRITE_APPEND_MSG', 1, fileNameOne, s2), to=client1)
        time.sleep(1)
        s2 = 'Append4'
        send(('WRITE_APPEND_MSG', 1, fileNameTwo, s2), to=client2) 
        time.sleep(1)
        s2 = 'Append5'
        send(('DELETE', 1, fileNameOne), to = client1)
        await(some(received(('DELETE_DONE', fileName2)),has=fileNameOne == fileName2))
        send(('WRITE_APPEND_MSG', 1, fileNameOne, s2), to=client3)
        await(some(received(('ERROR_APPEND', message))))
        assert(message == 'File Doesnt Exist to do record append')
        time.sleep(1)
        s2 = 'Appending 6666'
        send(('WRITE_APPEND_MSG', 1, fileNameTwo, s2), to=client4)
        time.sleep(2)
        send(('CREATE_SNAPSHOT', 1, fileNameTwo), to = client1)
        time.sleep(15)
        send(('CREATE_SNAPSHOT', 1, fileNameTwo), to = client2)
        time.sleep(15)
        send(('READ_MSG', 1, fileNameOne), to=client4) 
        await(some(received(('READ_FILE_DONE',dataRead,fileName2)), 
                                        has=fileNameOne == fileName2))
        output('THIS IS THE DATA READ!!!!!!!!!!!!!!!',dataRead)
        send(('DELETE', 1, fileNameOne), to = client1)
        await(received(('DONE',)))

    elif(testCase == 13): 
        send(('CREATE_MSG', 1, fileNameOne), to=client1)
        await(some(received(('CREATED', fileName2)), has=fileNameOne == fileName2))
        send(('CREATE_MSG', 1, fileNameTwo), to=client2)
        await(some(received(('CREATED', fileName2)), has=fileNameTwo == fileName2))
        send(('DELETE', 1, fileNameOne), to = client1)
        await(some(received(('DELETE_DONE', fileName2)),has=fileNameOne == fileName2))
        send(('WRITE_MSG',1,fileNameTwo, s1), to=client3)
        await(some(received(('WRITTEN', fileName2)),has=fileNameTwo == fileName2))
        s2 = 'Append1232'
        send(('WRITE_APPEND_MSG', 1,fileNameTwo, s2), to=client1)
        time.sleep(1)
        send(('CREATE_SNAPSHOT', 1, fileNameTwo), to = client3)
        time.sleep(15)
        send(('READ_MSG', 1, fileNameTwo), to=client4) 
        await(some(received(('READ_FILE_DONE',dataRead,fileName2)), 
                                        has=fileNameTwo == fileName2))
        output('*******************THIS IS THE DATA READ from file**********************',dataRead)
        send(('READ_MSG', 1, fileNameThree), to=client4) 
        await(some(received(('ERROR_READ', message))))
        assert(message == 'File Doesnt Exist to read')
        await(received(('DONE',)))

    elif(testCase == 14):
        send(('CREATE_MSG', 1, fileNameOne), to=client1)
        await(some(received(('CREATED', fileName2)), has=fileNameTwo == fileName2))
        send(('CREATE_MSG', 1, fileNameTwo), to=client2)
        await(some(received(('CREATED', fileName2)), has=fileNameTwo == fileName2))
        send(('WRITE_MSG',1,fileNameThree, s1), to=client3)
        await(some(received(('ERROR_WRITE', message))))
        assert(message == 'File error, file doesnt exists')
        s2 = 'Append1232'
        send(('WRITE_APPEND_MSG', 1,fileNameTwo, s2), to=client1)
        time.sleep(1)
        send(('CREATE_SNAPSHOT', 1, fileNameTwo), to = client3)
        time.sleep(15)
        send(('READ_MSG', 1, fileNameOne), to=client4) 
        await(some(received(('READ_FILE_DONE',dataRead,fileName2)), 
                                        has=fileNameOne == fileName2))
        output('****************************THIS IS THE DATA READ from file*******************',dataRead)
        send(('READ_MSG', 1, fileNameThree), to=client4) 
        send(('DELETE', 1, fileNameOne), to = client1)
        await(received(('DONE',)))

    elif(testCase == 15):
        send(('CREATE_MSG', 1, fileNameOne), to=client1)
        await(some(received(('CREATED', fileName2)), has=fileNameOne == fileName2))
        send(('CREATE_MSG', 1, fileNameTwo), to=client2)
        await(some(received(('CREATED', fileName2)), has=fileNameTwo == fileName2))
        send(('WRITE_MSG',1,fileNameOne, s1), to=client3)
        await(some(received(('WRITTEN', fileName2)),has=fileNameOne == fileName2))
        s2 = 'Append1232'
        send(('WRITE_APPEND_MSG', 1, fileNameOne, s2), to=client1)
        time.sleep(1)
        s2 = 'Append4'
        send(('WRITE_APPEND_MSG', 1, fileNameTwo, s2), to=client2) 
        time.sleep(1)
        s2 = 'Append5'
        send(('WRITE_APPEND_MSG', 1, fileNameOne, s2), to=client3)
        await(some(received(('ERROR_APPEND', message))))
        time.sleep(1)
        s2 = 'Appending 6666'
        send(('WRITE_APPEND_MSG', 1, fileNameTwo, s2), to=client4)
        time.sleep(2)
        send(('CREATE_SNAPSHOT', 1, fileNameTwo), to = client1)
        time.sleep(1)
        send(('CREATE_SNAPSHOT', 1, fileNameTwo), to = client2)
        time.sleep(1)
        send(('READ_MSG', 1, fileNameOne), to=client4) 
        await(some(received(('READ_FILE_DONE',dataRead,fileName2)), 
                                        has=fileNameOne == fileName2))
        output('THIS IS THE DATA READ!!!!!!!!!!!!!!!',dataRead)
        send(('DELETE', 1, fileNameOne), to = client1)
        await(received(('DONE',)))

    elif(testCase == 16):
        send(('CREATE_MSG', 1, fileNameOne), to=client1)
        await(some(received(('CREATED', fileName2)), has=fileNameOne == fileName2))
        send(('WRITE_MSG',1,fileNameOne, s1), to=client1)
        await(some(received(('WRITTEN', fileName2)),has=fileNameOne == fileName2))
        s2 = 'Append1232'
        send(('WRITE_APPEND_MSG', 1, fileNameOne, s2), to=client1)
        s2 = 'Append2'
        send(('WRITE_APPEND_MSG', 1, fileNameOne, s2), to=client2)
        send(('CREATE_SNAPSHOT', 1, fileNameOne), to = client3)
        time.sleep(2)
        send(('READ_MSG', 1, fileNameOne), to=client1) 
        await(some(received(('READ_FILE_DONE',dataRead,fileName2)), 
                                    has=fileNameOne == fileName2))
        output('****************Data Read before killing chunk server ***********',dataRead)
        output('************Killing Chunk Server***********************')
        c=logical_clock()
        send(('KILL_CHUNKSERVER',c), to=client2)
        await(some(received(('KILL',chunkServer,c2)), 
                                    has=c2>c))
        output(chunkServer)
        send(('DONE',), to =chunkServer)
        time.sleep(3)
        send(('READ_MSG', 1, fileNameOne), to=client1) 
        await(some(received(('READ_FILE_DONE',dataRead,fileName2)), 
                                    has=fileNameOne == fileName2))
        output('****************Data Read after killing chunk server ***********',dataRead)
        send(('DELETE', 1, fileNameOne), to = client1)
        await(received(('DONE',)))
